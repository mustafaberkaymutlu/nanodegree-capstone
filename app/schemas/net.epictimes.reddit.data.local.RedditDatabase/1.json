{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "8e46a816906a1de2b9897488e4d5861e",
    "entities": [
      {
        "tableName": "AccessToken",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `accessToken` TEXT, `tokenType` TEXT, `expiresIn` REAL NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tokenType",
            "columnName": "tokenType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "expiresIn",
            "columnName": "expiresIn",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Post",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `author` TEXT, `title` TEXT, `selfText` TEXT, `subreddit` TEXT, `subredditNamePrefixed` TEXT, `headerImg` TEXT, `thumbnail` TEXT, `bannerImg` TEXT, `createdUtc` INTEGER, `url` TEXT, `domain` TEXT NOT NULL, `previewImage` TEXT, `commentCount` INTEGER NOT NULL, `upVoteCount` INTEGER NOT NULL, `downVoteCount` INTEGER NOT NULL, `vote` INTEGER, `isVideo` INTEGER NOT NULL, `videoUrl` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selfText",
            "columnName": "selfText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subreddit",
            "columnName": "subreddit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subredditNamePrefixed",
            "columnName": "subredditNamePrefixed",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "headerImg",
            "columnName": "headerImg",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnail",
            "columnName": "thumbnail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bannerImg",
            "columnName": "bannerImg",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdUtc",
            "columnName": "createdUtc",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "previewImage",
            "columnName": "previewImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentCount",
            "columnName": "commentCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "upVoteCount",
            "columnName": "upVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "downVoteCount",
            "columnName": "downVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vote",
            "columnName": "vote",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isVideo",
            "columnName": "isVideo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "videoUrl",
            "columnName": "videoUrl",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Subreddit",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`displayName` TEXT NOT NULL, `displayNamePrefixed` TEXT, `subscribers` INTEGER NOT NULL, `description` TEXT, `userIsSubscriber` INTEGER NOT NULL, PRIMARY KEY(`displayName`))",
        "fields": [
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayNamePrefixed",
            "columnName": "displayNamePrefixed",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subscribers",
            "columnName": "subscribers",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userIsSubscriber",
            "columnName": "userIsSubscriber",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "displayName"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"8e46a816906a1de2b9897488e4d5861e\")"
    ]
  }
}